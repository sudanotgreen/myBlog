import{_ as a,o as t,c as p,a as n,d as s,b as o}from"./app--ias0FLC.js";const e={},c=n("p",null,"厨房里总共有 n 个橘子，你决定每一天选择如下方式之一吃这些橘子：",-1),l=n("p",null,[s("吃掉一个橘子。"),n("br"),s(" 如果剩余橘子数 n 能被 2 整除，那么你可以吃掉 n/2 个橘子。"),n("br"),s(" 如果剩余橘子数 n 能被 3 整除，那么你可以吃掉 2*(n/3) 个橘子。"),n("br"),s(" 每天你只能从以上 3 种方案中选择一种方案。")],-1),i=n("p",null,"请你返回吃掉所有 n 个橘子的最少天数。",-1),u=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("显然「吃掉一个橘子」这样的操作是很不优秀的，不像另外的两种操作可以直接将橘子数变为当前的 1/2 和 1/3。所以我们要让「吃掉一个橘子」的操作次数尽可能少。"),n("br"),s(" 所以我们可以考虑的是，n 执行 0 或 1 个「吃掉一个橘子」后变为 1/2 ，或者执行0 或 1 或 2 个「吃掉一个橘子」后变为 1/3 。"),n("br"),s(" 边界条件小于等于 1 时， 直接返回响应值即可。"),n("br"),s(" 优化： 利用map储存之前的计算结果进行优化。")])],-1),r=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  unordered_map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> memo<span class="token punctuation">;</span>
<span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token keyword">int</span> <span class="token function">minDays</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>memo<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 之前计算过</span>
      <span class="token keyword">return</span> memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">minDays</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> n <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">,</span>
                          <span class="token function">minDays</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> n <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k=[c,l,i,u,r];function d(m,v){return t(),p("div",null,k)}const _=a(e,[["render",d],["__file","1553.html.vue"]]);export{_ as default};
